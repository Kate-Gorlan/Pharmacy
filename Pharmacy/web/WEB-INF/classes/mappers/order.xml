<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pharmacy.dao.OrderDao">

    <resultMap id="Order" type="pharmacy.entity.Order">
        <id column="order_id" property="id" />
        <result column="order_date" property="date" />
        <association property="employee" resultMap="Employee" />
        <association property="client" resultMap="Client" />
    </resultMap>
    
    <resultMap id="Employee" type="pharmacy.entity.Employee">
        <id column="employee_id" property="id" />
        <result column="employee_full_name" property="fullName" />
        <result column="employee_pass" property="password" />
        <association property="position" resultMap="Position" />
    </resultMap>
    
    <resultMap id="Position" type="pharmacy.entity.Position">
        <id column="position_id" property="id" />
        <result column="position_title" property="title" />
    </resultMap>
    
    <resultMap id="Client" type="pharmacy.entity.Client">
        <id column="client_id" property="id" />
        <result column="client_full_name" property="fullName" />
        <result column="client_age" property="age" />
        <result column="client_address" property="address" />
        <result column="client_phone" property="phone" />
        <association property="user" resultMap="User" />
    </resultMap>

    <resultMap id="User" type="pharmacy.entity.User">
        <id column="user_id" property="id" />
        <result column="login" property="login" />
        <result column="password" property="password" />
    </resultMap>

    <insert id="create">
        INSERT INTO [order] (employee_id) VALUES (
            (SELECT employee_id FROM employee WHERE employee_id = #{employee.id})
    </insert>
    
    <insert id="createWithClient">
        INSERT INTO [order] (employee_id, client_id) VALUES (
            (SELECT employee_id FROM employee WHERE employee_id = #{employee.id}), 
            (SELECT client_id FROM client WHERE client_id = #{client.id}))
    </insert>
    <!-- INSERT INTO [order] (employee_id, order_date, client_id) VALUES (
            (SELECT employee_id FROM employee WHERE employee_id = #{employee.id}), CONVERT(NVARCHAR(10), #{date}, 120),
            (SELECT client_id FROM client WHERE client_id = #{client.id})) -->

    <select id="read" parameterType="java.lang.Long" resultMap="Order">
        SELECT *
        FROM [order] o JOIN employee e ON e.employee_id = o.employee_id 
        LEFT JOIN client c ON c.client_id = o.client_id
        WHERE o.order_id = #{id}
    </select>

    <update id="update" parameterType="pharmacy.entity.Order">
        UPDATE [order] SET 
        employee_id = (SELECT employee_id FROM employee WHERE employee_id = #{employee.id})
        WHERE order_id = #{id}
    </update>
    
    <update id="updateWithClient" parameterType="pharmacy.entity.Order">
        UPDATE [order] SET 
        employee_id = (SELECT employee_id FROM employee WHERE employee_id = #{employee.id}),
        client_id = (SELECT client_id FROM client WHERE client_id = #{client.id})
        WHERE order_id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        DELETE FROM [order] WHERE order_id = #{id}
    </delete>
    
    <select id="findAll" resultMap = "Order" >
        SELECT *
        FROM [order] o JOIN employee e ON e.employee_id = o.employee_id
        LEFT JOIN client c ON c.client_id = o.client_id
    </select>
    
    <select id="findNotSale" resultMap = "Order" >
        SELECT *
        FROM [order] o JOIN employee e ON e.employee_id = o.employee_id
        LEFT JOIN client c ON c.client_id = o.client_id
        LEFT JOIN sale s ON s.order_id = o.order_id
        WHERE s.order_id IS NULL
    </select>
    
    <select id="findByDate" parameterType="java.lang.String" resultMap = "Order">
        SELECT *
        FROM [order] o JOIN employee e ON e.employee_id = o.employee_id
        LEFT JOIN client c ON c.client_id = o.client_id
        WHERE o.order_date = #{date}
    </select>
    
    <select id="findByEmpl" parameterType="java.lang.Long" resultMap = "Order">
        SELECT top(1)  o.*, c.client_full_name, e.employee_full_name, e.position_id
        FROM [order] o JOIN employee e ON e.employee_id = o.employee_id
        LEFT JOIN client c ON c.client_id = o.client_id
        WHERE o.employee_id = #{id}
        order by o.order_id desc
    </select>

</mapper>