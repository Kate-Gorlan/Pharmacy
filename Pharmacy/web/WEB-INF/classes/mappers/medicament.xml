<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pharmacy.dao.MedicamentDao">

    <resultMap id="Medicament" type="pharmacy.entity.Medicament">
        <id column="medicament_id" property="id" />
        <result column="medicament_name" property="name" />
        <result column="mode_of_application" property="modeOfApplication" />
        <result column="medicament_type" property="type" />
        <result column="availability_of_prescription" property="availabilityOfPrescription" />
        <result column="manufacturability" property="manufacturability" />
        <result column="picture" property="picture" />
        <result column="description" property="description" />
        <result column="indications" property="indications" />
        <result column="doses_and_method_of_application" property="dosesAndMethodOfAppl" />
        <result column="contraindications" property="contraindications" />
        <result column="precautions" property="precautions" />
        <result column="interaction" property="interaction" />
        <result column="pregnancy_and_breastfeeding" property="pregnancyAndBreastfeeding" />
        <result column="influence_on_transport_management" property="influenceTM" />
        <result column="side_effect" property="sideEffect" />
        <result column="overdose" property="overdose" />     
    </resultMap>

    <resultMap id="TopMedicament" type="pharmacy.common.TopMedicament">
        <result column="Quantity" property="quantity" />
        <result column="Medicament" property="medicament" />
        <result column="Medicament type" property="medicamentType" />
    </resultMap>

    <resultMap id="MedCriticalNorm" type="pharmacy.common.MedCriticalNorm">
        <result column="Medicament" property="medicament" />
        <result column="Medicament type" property="medicamentType" />
        <result column="Medicament quantity" property="medicamentQuantity" />
    </resultMap>

    <resultMap id="MedTechnology" type="pharmacy.common.MedTechnology">
        <result column="Medicament" property="medicament" />
        <result column="Technology" property="technology" />
        <result column="Manufacturer" property="manufacturer" />
        <result column="Order date" property="orderDate" />
        <result column="Availability date" property="availabilityDate" />
    </resultMap>

    <resultMap id="MedTechnologyByType" type="pharmacy.common.MedTechnologyByType">
        <result column="Medicament" property="medicament" />
        <result column="Technology" property="technology" />
    </resultMap>

    <resultMap id="MedTechnologyByName" type="pharmacy.common.MedTechnologyByName">
        <result column="Medicament Type" property="medicamentType" />
        <result column="Technology" property="technology" />
    </resultMap>

   <!--  <resultMap id="MedicamentInfo" type="pharmacy.common.MedicamentInfo">
        <result column="Medicament type" property="medicamentType" />
        <result column="Medicament" property="technology" />
        <result column="Medicament quantity" property="ingredient" />
        <result column="Medicament type" property="productName" />
        <result column="Medicament" property="deliveryQuantity" />
        <result column="Medicament quantity" property="deliveryPrice" />
    </resultMap> -->
    
    <resultMap id="MedInfoAvailability" type="pharmacy.common.MedInfoAvailability">
        <result column="medicament_name" property="name" />
        <result column="medicament_manufacturability" property="manufacturability" />
        <result column="medicament_quantity" property="quantity" />
        <result column="medicament_price" property="price" />
    </resultMap>

    <resultMap id="MedicamentIngredients" type="pharmacy.common.MedicamentIngredients">
        <id column="ingr_id" property="id" />
        <result column="medicament" property="medicament" />
        <result column="medicament_name" property="medicamentName" />
        <result column="medicament_type" property="medicamentType" />
        <result column="recipe_medicament" property="recipeMedicament" />
        <result column="settling_time" property="settlingTime" />
        <result column="technology" property="technology" />
        <result column="ingredient" property="ingredient" />
        <result column="product" property="product" />
        <result column="ingredient_quantity" property="ingredientQuantity" />
        <result column="price_of_work" property="priceOfWork" />
        <result column="time_for_preparing" property="timeForPreparing" />
        <result column="product_name" property="productName" />
        <result column="product_type" property="productType" />
        <result column="stock" property="stock" />
        <result column="product_price" property="productPrice" />
        <result column="product_quantity" property="productQuantity" />
        <result column="product_need_quantity" property="productNeedQuantity" />
        <result column="product_need_price" property="productNeedPrice" />
    </resultMap>

    <resultMap id="ListMedicamentType" type="pharmacy.common.ListMedicamentType">
        <result column="medicament_type" property="type"/>
    </resultMap>

    <resultMap type="pharmacy.common.TopOverdueMed" id="ListTopOverdueMed">
        <id column="medicament_id" property="id"/>
        <result column="medicament_name" property="nameMed"/>
        <result column="medicament_price" property="priceMed"/>
        <result column="medicament_pic" property="picUri"/>
    </resultMap>

    <insert id="create">
        INSERT INTO medicament (medicament_name, mode_of_application,
        medicament_type, availability_of_prescription,
        manufacturability, picture, description, indications, doses_and_method_of_application,
        contraindications, precautions, interaction, pregnancy_and_breastfeeding,
        influence_on_transport_management, side_effect, overdose)
        VALUES (
        #{name}, #{modeOfApplication}, #{type},
        #{availabilityOfPrescription}, #{manufacturability},
        #{picture}, #{description},
        #{indications}, #{dosesAndMethodOfAppl},
        #{contraindications}, #{precautions},
        #{interaction}, #{pregnancyAndBreastfeeding},
        #{influenceTM}, #{sideEffect},
        #{overdose})
    </insert>

    <select id="read" parameterType="java.lang.Long" resultMap="Medicament">
        SELECT *
        FROM medicament m
        WHERE m.medicament_id = #{id}
    </select>

    <update id="update" parameterType="pharmacy.entity.Medicament">
        UPDATE medicament SET
        medicament_name = #{name},
        mode_of_application = #{modeOfApplication},
        medicament_type = #{type},
        availability_of_prescription = #{availabilityOfPrescription},
        manufacturability = #{manufacturability},
        picture = #{picture}, 
        description = #{description},
        indications = #{indications}, 
        doses_and_method_of_application = #{dosesAndMethodOfAppl},
        contraindications = #{contraindications}, 
        precautions = #{precautions},
        interaction = #{interaction}, 
        pregnancy_and_breastfeeding = #{pregnancyAndBreastfeeding},
        influence_on_transport_management = #{influenceTM}, 
        side_effect = #{sideEffect},
        overdose = #{overdose}
        
        WHERE medicament_id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        DELETE FROM medicament WHERE
        medicament_id = #{id}
    </delete>

    <select id="findAll" resultMap="Medicament">
        SELECT *
        FROM medicament m
    </select>

    <select id="findByName" parameterType="java.lang.String" resultMap="Medicament">
        SELECT *
        FROM medicament m
        WHERE m.medicament_name = #{name}
    </select>

    <select id="findByModOfAppl" parameterType="java.lang.String" resultMap="Medicament">
        SELECT *
        FROM medicament m
        WHERE m.medicament_name = #{modeOfApplication}
    </select>

    <select id="findByType" parameterType="java.lang.String" resultMap="Medicament">
        SELECT *
        FROM medicament m
        WHERE m.medicament_type = #{type}
    </select>

    <select id="findByAvailabilityOfPrescription" parameterType="java.lang.String" resultMap="Medicament">
        SELECT *
        FROM medicament m
        WHERE m.availability_of_prescription = #{availabilityOfPrescription}
    </select>

    <select id="findByManufacturability" parameterType="java.lang.String" resultMap="Medicament">
        SELECT *
        FROM medicament m
        WHERE m.manufacturability = #{manufacturability}
    </select>

    <select id="GetTopMedicament" resultMap="TopMedicament">

        select top 10 res.Count
        as Quantity, m.medicament_name as Medicament,
        m.medicament_type as
        [Medicament type]
        from (SELECT om.medicament_id as
        Medicament,
        COUNT(om.medicament_id) as
        Count
        FROM [order_medicament] om
        group by
        om.medicament_id) as res
        JOIN [medicament] m ON res.Medicament
        =
        m.medicament_id
        ORDER BY res.Count DESC
    </select>

    <select id="GetTopMedicamentType" parameterType="java.lang.String" resultMap="TopMedicament">

        select top 10 res.Count as
        Quantity, m.medicament_name as Medicament,
        m.medicament_type as
        [Medicament type]
        from (SELECT om.medicament_id as
        Medicament,
        COUNT(om.medicament_id) as
        Count
        FROM [order_medicament] om
        group by
        om.medicament_id) as res
        JOIN [medicament] m ON res.Medicament
        =
        m.medicament_id
        WHERE LOWER(m.medicament_type) =
        LOWER(dbo.DeleteDoublуSpace(#{type}))
        ORDER BY res.Count DESC
    </select>

    <select id="GetMedOver" resultMap="Medicament">
        SELECT
        m.*

        FROM [medicament] m
        LEFT JOIN [medicament_stock] sm ON
        m.medicament_id = sm.medicament_id
        WHERE sm.medicament_id IS NULL
    </select>

    <select id="GetReachedCriticalNorm" resultMap="MedCriticalNorm">
        SELECT * from
        dbo.GetReachedCriticalNorm();
    </select>

    <select id="GetMinMedInStockByType" parameterType="java.lang.String" resultMap="MedCriticalNorm">
        SELECT TOP(1)
        m.medicament_name AS [Medicament],
        m.medicament_type AS [Medicament type],
        ms.quantity AS [Medicament quantity]

        FROM (SELECT sm.[medicament_id], SUM(sm.[medicament_quantity]) as quantity
        FROM medicament_stock sm GROUP BY sm.[medicament_id]) as ms
        JOIN [medicament] m ON m.medicament_id = ms.medicament_id
        where LOWER(m.medicament_type) = LOWER(dbo.DeleteDoublуSpace(#{type}))
        ORDER BY ms.quantity ASC
    </select>

    <select id="GetMinMedInStock" resultMap="MedCriticalNorm">
        SELECT TOP(1)
        m.medicament_name AS [Medicament],
        m.medicament_type AS [Medicament type],
        ms.quantity AS [Medicament quantity]

        FROM (SELECT sm.[medicament_id], SUM(sm.[medicament_quantity]) as quantity
        FROM medicament_stock sm GROUP BY sm.[medicament_id]) as ms
        JOIN [medicament] m ON m.medicament_id = ms.medicament_id
        ORDER BY ms.quantity ASC
    </select>

    <select id="GetTechnologyOrderInProduction" resultMap="MedTechnology">
        SELECT
        m.medicament_name AS [Medicament],
        rm.technology AS [Technology],
        e.employee_full_name AS [Manufacturer],
        o.order_date AS [Order date],
        po.availability_date AS [Availability date]
        FROM [pending_order] po
        JOIN [order] o ON o.order_id = po.order_id
        JOIN [order_medicament] om ON o.order_id = om.order_id
        JOIN [medicament] m ON m.medicament_id = om.medicament_id
        JOIN [recipe_medicament] rm ON m.medicament_id = rm.medicament_id
        JOIN [employee] e ON e.employee_id = po.employeee_cooking_id
        WHERE po.employeee_cooking_id IS NOT NULL AND po.take_status = 'В ожидании'
    </select>

    <select id="GetTechnologyByName" parameterType="java.lang.String" resultMap="MedTechnologyByName">
        SELECT
        m.medicament_type AS [Medicament Type],
        rm.technology AS [Technology]
        FROM [medicament] m
        JOIN [recipe_medicament] rm ON m.medicament_id = rm.medicament_id
        WHERE LOWER(m.medicament_name) = LOWER(dbo.DeleteDoublуSpace(#{name}))
    </select>

    <select id="GetTechnologyByType" parameterType="java.lang.String" resultMap="MedTechnologyByType">
        SELECT
        m.medicament_name AS [Medicament],
        rm.technology AS [Technology]
        FROM [medicament] m
        JOIN [recipe_medicament] rm ON m.medicament_id = rm.medicament_id
        WHERE LOWER(m.medicament_type) = LOWER(dbo.DeleteDoublуSpace(#{type}))
    </select>

<!--      <select id="GetInfoMedicamentByName" parameterType="java.lang.String" resultMap="MedicamentInfo">
        SELECT
        m.medicament_type AS [Medicament type],
        rm.technology AS [Technology],
        i.ingredient_id AS [Ingredient],
        p.product_name AS [Product name],
        res.q AS [Delivery quantity],
        res.p AS [Delivery price]

        FROM [medicament] m
        JOIN [recipe_medicament] rm ON m.medicament_id = rm.medicament_id
        JOIN [ingredient] i ON i.recipe_medicament_id = rm.recipe_medicament_id
        JOIN [product] p ON p.product_id = i.product_id
        JOIN (
        select SUM(stock.product_quantity) AS q,
        SUM(stock.product_price) AS p,
        stock.product_id AS id
        from [product_stock] stock
        group by stock.product_id
        ) as res ON res.id = p.product_id
        WHERE LOWER(m.medicament_name) = LOWER(dbo.DeleteDoublуSpace(#{name}))
    </select> -->

    <select id="GetIngredients" parameterType="java.lang.String" resultMap="MedicamentIngredients">
        select * from dbo.getIngredients(#{name})
    </select>
    
    <select id="getAllMedType" resultMap="ListMedicamentType">
        Select DISTINCT medicament_type from medicament
    </select>

    <select id="getTopOverdueMed" resultMap="ListTopOverdueMed">
       select top 10 * from dbo.getTopOverdueMed()
    </select>
    
    <select id="getMedInfoAvailability" parameterType="java.lang.Long" resultMap="MedInfoAvailability">
        select * from GetInfoMedicamentById(#{idMed})
    </select>
    
    <select id="getQuantityMedPending" parameterType="java.lang.Long" resultType="java.lang.Integer">
    select dbo.getQuantityMedPending(#{id})
    </select>

</mapper>